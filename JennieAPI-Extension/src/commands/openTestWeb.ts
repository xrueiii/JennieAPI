// src/commands/testCommand.ts

import * as vscode from 'vscode';
import * as path from 'path';
import * as fs from 'fs';

export function registerOpenWebCommand(context: vscode.ExtensionContext) {
    const openWebviewCmd = vscode.commands.registerCommand('jennieapi.openWebview', () => {
        const panel = vscode.window.createWebviewPanel(
        'jennieWebview',
        'Jennie WebView',
        vscode.ViewColumn.One,
        {
            enableScripts: true,
            localResourceRoots: [vscode.Uri.file(path.join(context.extensionPath, 'src/webview')), vscode.Uri.file(path.join(context.extensionPath, 'icon'))]
        }
        );
        
        // 圖片路徑轉換為可用於 WebView 的 URI
        const lightIcon = panel.webview.asWebviewUri(vscode.Uri.file(path.join(context.extensionPath, 'icon', 'light_theme.png')));
        const darkIcon = panel.webview.asWebviewUri(vscode.Uri.file(path.join(context.extensionPath, 'icon', 'dark_theme.png')));
        const button1 = panel.webview.asWebviewUri(vscode.Uri.file(path.join(context.extensionPath, 'icon', 'button1.png')));
        const button2 = panel.webview.asWebviewUri(vscode.Uri.file(path.join(context.extensionPath, 'icon', 'button2.png')));
        
        // 載入 HTML 並替換 {{...}} 佔位符
        let htmlContent = fs.readFileSync(path.join(context.extensionPath, 'src/webview', 'webview.html'), 'utf8');
        htmlContent = htmlContent
            .replace(/{{LIGHT_ICON}}/g, lightIcon.toString()) // <-- note the /g flag
            .replace('{{DARK_ICON}}', darkIcon.toString())
            .replace(/{{BUTTON1}}/g, button1.toString())
            .replace(/{{BUTTON2}}/g, button2.toString());
        
        
        panel.webview.html = htmlContent;
  });

  context.subscriptions.push(openWebviewCmd);
}